{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4a937b7d",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-04-02T12:54:11.492349Z",
     "iopub.status.busy": "2025-04-02T12:54:11.491986Z",
     "iopub.status.idle": "2025-04-02T12:54:13.468152Z",
     "shell.execute_reply": "2025-04-02T12:54:13.467159Z"
    },
    "jupyter": {
     "source_hidden": true
    },
    "papermill": {
     "duration": 1.985323,
     "end_time": "2025-04-02T12:54:13.470600",
     "exception": false,
     "start_time": "2025-04-02T12:54:11.485277",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'temperature': 2063.15, 'fO2': 1.8032999999999997e-06, 'radius': array([0.00085 , 0.000835, 0.00084 , 0.000815, 0.00082 ]), 'mean_radius': 0.0008320000000000001, 'std_radius': 1.288409872672513e-05, 'weight': array([7.77661711e-06, 7.37213647e-06, 7.50536466e-06, 6.85498906e-06,\n",
      "       6.98193010e-06]), 'mean_weight': 7.298207479807872e-06, 'std_weight': 3.387415884143756e-07, 't': 36, 'composition': {'element': 'Ce', 'mean': 236.35392662985436, 'std_dev': 1.165167412497055, 'mean_ho': 215.26406794643123, 'std_dev_ho': 1.6168646997127742}}\n",
      "{'temperature': 2268.15, 'fO2': 1.0722e-06, 'radius': array([0.00089, 0.00091, 0.00091, 0.00089, 0.00087]), 'mean_radius': 0.000894, 'std_radius': 1.496662954709577e-05, 'weight': array([8.92696762e-06, 9.54241097e-06, 9.54241097e-06, 8.92696762e-06,\n",
      "       8.33857228e-06]), 'mean_weight': 9.055465890166195e-06, 'std_weight': 4.5192722408630476e-07, 't': 32, 'composition': {'element': 'Ce', 'mean': 214.73848265191822, 'std_dev': 2.2469960960925173, 'mean_ho': 216.21523916451832, 'std_dev_ho': 1.5847320221380343}}\n",
      "{'temperature': 2458.15, 'fO2': 2.8982e-07, 'radius': array([0.000805, 0.000815, 0.000795, 0.00082 , 0.00077 ]), 'mean_radius': 0.000801, 'std_radius': 1.7720045146669355e-05, 'weight': array([6.60574159e-06, 6.85498906e-06, 6.36261032e-06, 6.98193010e-06,\n",
      "       5.78104187e-06]), 'mean_weight': 6.5172625892844175e-06, 'std_weight': 4.251451200829843e-07, 't': 22, 'composition': {'element': 'Ce', 'mean': 213.11213203308097, 'std_dev': 1.3205964678800148, 'mean_ho': 205.25475821843332, 'std_dev_ho': 1.3164424914230999}}\n",
      "{'temperature': 2653.15, 'fO2': 5.4728000000000005e-08, 'radius': array([0.000735, 0.000725, 0.00071 , 0.000745, 0.000715]), 'mean_radius': 0.000726, 'std_radius': 1.2806248474865685e-05, 'weight': array([5.02800796e-06, 4.82556266e-06, 4.53219916e-06, 5.23603762e-06,\n",
      "       4.62862573e-06]), 'mean_weight': 4.850086624794931e-06, 'std_weight': 2.574152153033386e-07, 't': 24, 'composition': {'element': 'Ce', 'mean': 206.52227203912676, 'std_dev': 0.9864332749295259, 'mean_ho': 232.9976069929902, 'std_dev_ho': 1.5677151815729289}}\n",
      "{'temperature': 2833.15, 'fO2': 1.2892999999999998e-08, 'radius': array([0.000835, 0.000805, 0.000795, 0.00084 , 0.00082 ]), 'mean_radius': 0.000819, 'std_radius': 1.7146428199482245e-05, 'weight': array([7.37213647e-06, 6.60574159e-06, 6.36261032e-06, 7.50536466e-06,\n",
      "       6.98193010e-06]), 'mean_weight': 6.965556628312812e-06, 'std_weight': 4.358850938812584e-07, 't': 21, 'composition': {'element': 'Ce', 'mean': 210.354168466675, 'std_dev': 0.9654696838440924, 'mean_ho': 262.6689134429033, 'std_dev_ho': 1.2234046976031343}}\n",
      "{'temperature': 2263.15, 'fO2': 0.025543, 'radius': array([0.00074 , 0.00074 , 0.000735, 0.00074 , 0.00074 ]), 'mean_radius': 0.0007390000000000001, 'std_radius': 2.0000000000000054e-06, 'weight': [5.14e-06, 5.09e-06, 5.12e-06], 'mean_weight': 5.116666666666667e-06, 'std_weight': 2.0548046676563058e-08, 't': 90, 'composition': {'element': 'Ce', 'mean': 169.77824234887433, 'std_dev': 1.4120904064082391, 'mean_ho': 208.04634388874476, 'std_dev_ho': 2.7513127801025012}}\n",
      "{'temperature': 2483.15, 'fO2': 0.055873, 'radius': array([0.000755, 0.00074 , 0.000745, 0.000745, 0.000755]), 'mean_radius': 0.000748, 'std_radius': 6.000000000000015e-06, 'weight': [5.33e-06, 5.31e-06, 5.29e-06], 'mean_weight': 5.309999999999999e-06, 'std_weight': 1.6329931618554365e-08, 't': 97, 'composition': {'element': 'Ce', 'mean': 106.98774170419911, 'std_dev': 1.3310322890100732, 'mean_ho': 203.47807893567668, 'std_dev_ho': 1.6391464064572607}}\n",
      "{'temperature': 2673.15, 'fO2': 0.09275399999999999, 'radius': array([0.00075 , 0.00074 , 0.00075 , 0.000745, 0.00075 ]), 'mean_radius': 0.0007469999999999999, 'std_radius': 4.000000000000011e-06, 'weight': [5.32e-06, 5.29e-06, 5.29e-06], 'mean_weight': 5.3e-06, 'std_weight': 1.4142135623730815e-08, 't': 61, 'composition': {'element': 'Ce', 'mean': 55.91165784321494, 'std_dev': 0.929795948284271, 'mean_ho': 199.42719106488178, 'std_dev_ho': 0.9383576932371419}}\n",
      "{'temperature': 2893.15, 'fO2': 0.1386, 'radius': array([0.000885, 0.000885, 0.00089 , 0.000885, 0.000885]), 'mean_radius': 0.000886, 'std_radius': 1.999999999999962e-06, 'weight': [8.71e-06, 8.73e-06, 8.66e-06], 'mean_weight': 8.7e-06, 'std_weight': 2.9439202887759206e-08, 't': 31, 'composition': {'element': 'Ce', 'mean': 74.10031441627143, 'std_dev': 0.7013829265880607, 'mean_ho': 204.9215010165489, 'std_dev_ho': 1.956707067363908}}\n",
      "{'temperature': 2068.15, 'fO2': 0.9989, 'radius': array([0.00088 , 0.000885, 0.000885, 0.00087 , 0.000865]), 'mean_radius': 0.000877, 'std_radius': 8.124038404635982e-06, 'weight': [8.46e-06, 8.54e-06, 8.53e-06], 'mean_weight': 8.51e-06, 'std_weight': 3.559026084010403e-08, 't': 83, 'composition': {'element': 'Ce', 'mean': 201.39243248525455, 'std_dev': 1.1081686678663842, 'mean_ho': 206.06016743825785, 'std_dev_ho': 1.5307733990381869}}\n",
      "{'temperature': 2288.15, 'fO2': 0.99541, 'radius': array([0.00072 , 0.000725, 0.000725, 0.000725, 0.000725]), 'mean_radius': 0.000724, 'std_radius': 1.999999999999962e-06, 'weight': [4.75e-06, 4.76e-06, 4.79e-06], 'mean_weight': 4.766666666666667e-06, 'std_weight': 1.6996731711975787e-08, 't': 69, 'composition': {'element': 'Ce', 'mean': 128.09119492429156, 'std_dev': 1.3625857236075263, 'mean_ho': 200.42438670102578, 'std_dev_ho': 2.1475999220026982}}\n",
      "{'temperature': 2498.15, 'fO2': 0.98584, 'radius': array([0.000655, 0.00065 , 0.00065 , 0.00065 , 0.000645]), 'mean_radius': 0.0006500000000000001, 'std_radius': 3.1622776601683877e-06, 'weight': [3.41e-06, 3.52e-06, 3.47e-06], 'mean_weight': 3.4666666666666664e-06, 'std_weight': 4.496912521077355e-08, 't': 55, 'composition': {'element': 'Ce', 'mean': 58.46921976006789, 'std_dev': 2.0538729385206738, 'mean_ho': 199.52261434813911, 'std_dev_ho': 1.7014571030819525}}\n",
      "{'temperature': 2683.15, 'fO2': 0.96715, 'radius': array([0.000855, 0.00086 , 0.00086 , 0.00086 , 0.00086 ]), 'mean_radius': 0.0008590000000000001, 'std_radius': 2.0000000000000054e-06, 'weight': [7.84e-06, 7.88e-06, 7.83e-06], 'mean_weight': 7.85e-06, 'std_weight': 2.1602468994693442e-08, 't': 51, 'composition': {'element': 'Ce', 'mean': 50.395147485571584, 'std_dev': 0.3165792611607552, 'mean_ho': 204.65627642045646, 'std_dev_ho': 1.2607059562347807}}\n",
      "{'temperature': 2873.15, 'fO2': 0.93107, 'radius': array([0.00085 , 0.00085 , 0.00085 , 0.00084 , 0.000845]), 'mean_radius': 0.000847, 'std_radius': 3.999999999999962e-06, 'weight': [7.62e-06, 7.69e-06, 7.68e-06], 'mean_weight': 7.663333333333333e-06, 'std_weight': 3.091206165165205e-08, 't': 33.5, 'composition': {'element': 'Ce', 'mean': 13.403563966076923, 'std_dev': 0.14831166560772152, 'mean_ho': 205.03918502444645, 'std_dev_ho': 1.003076755993476}}\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "\n",
    "#  Mean Density: 3023.05 kg/m³\n",
    "#  Std Deviation: 89.25 kg/m³ \n",
    "\n",
    "MeanDensityCMAST = 3023.05 #kg/m³\n",
    "StdDeviationDensityCMAST = 89.25 #kg/m³\n",
    "\n",
    "\n",
    "\n",
    "# Define the sheet name to load\n",
    "sheet_name = 'Data'  # Replace with the actual sheet name if different\n",
    "\n",
    "# Load the entire sheet into a DataFrame\n",
    "file_path = '/kaggle/input/calculations-argon/240604a_SebastianTE_PS_Calculations_Argon.xlsx'\n",
    "df = pd.read_excel(file_path, sheet_name=sheet_name)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# Initialize the data list\n",
    "data = []\n",
    "\n",
    "#Argon Data\n",
    "\n",
    "\n",
    "# 1800 Argon \n",
    "temperature = 1790 + 273.15  # put in C value to get kelvin\n",
    "fO2 = 1.8033 * 10**-6       # Replace with your value calculated using equiweb\n",
    "element = \"Ce\"    # Replace with your element name\n",
    "t = 36 #time of heating in seconds\n",
    "diameter = [0.0017, 0.00167, 0.00168, 0.00163, 0.00164]\n",
    "radius = np.array(diameter) / 2\n",
    "weight = (4 / 3) * np.pi * radius**3 * MeanDensityCMAST\n",
    "measurements = df.iloc[72:81, 66].values  # Accesses row i, column j (Python is 0-indexed) from sheet df\n",
    "measurements_ho = df.iloc[72:81, 90].values  # Accesses row i, column j (Python is 0-indexed) from sheet df Holium normalising\n",
    "\n",
    "\n",
    "# Calculate the mean and standard deviation\n",
    "mean_value = np.mean(measurements)\n",
    "std_dev = np.std(measurements)\n",
    "\n",
    "mean_value_ho = np.mean(measurements_ho)\n",
    "std_dev_ho = np.std(measurements_ho)\n",
    "\n",
    "mean_radius = np.mean(radius)\n",
    "std_radius = np.std(radius)\n",
    "\n",
    "mean_weight = np.mean(weight)\n",
    "std_weight = np.std(weight)\n",
    "\n",
    "# Append the data to the list\n",
    "data.append({\n",
    "    \"temperature\": temperature,\n",
    "    \"fO2\": fO2,\n",
    "    \"radius\": radius,\n",
    "        \"mean_radius\": mean_radius,\n",
    "        \"std_radius\": std_radius,\n",
    "    \"weight\": weight,\n",
    "        \"mean_weight\": mean_weight,\n",
    "        \"std_weight\": std_weight,\n",
    "    \"t\":t,\n",
    "    \"composition\": {\n",
    "        \"element\": element,\n",
    "        \"mean\": mean_value,\n",
    "        \"std_dev\": std_dev,\n",
    "        \"mean_ho\": mean_value_ho,\n",
    "        \"std_dev_ho\": std_dev_ho\n",
    "    }\n",
    "})\n",
    "\n",
    "\n",
    "\n",
    "# 2000 Argon \n",
    "temperature = 1995 + 273.15\n",
    "fO2 = 1.0722 * 10**-6\n",
    "element = \"Ce\"\n",
    "t = 32\n",
    "diameter = [0.00178, 0.00182, 0.00182, 0.00178, 0.00174]\n",
    "radius = np.array(diameter) / 2\n",
    "weight = (4 / 3) * np.pi * radius**3 * MeanDensityCMAST\n",
    "measurements = df.iloc[84:93, 66].values  # Accesses row 2, column 2 (Python is 0-indexed)\n",
    "measurements_ho = df.iloc[84:93, 90].values  # Accesses row i, column j (Python is 0-indexed) from sheet df Holium normalising\n",
    "\n",
    "# Calculate the mean and standard deviation\n",
    "mean_value = np.mean(measurements)\n",
    "std_dev = np.std(measurements)\n",
    "\n",
    "mean_value_ho = np.mean(measurements_ho)\n",
    "std_dev_ho = np.std(measurements_ho)\n",
    "\n",
    "mean_radius = np.mean(radius)\n",
    "std_radius = np.std(radius)\n",
    "\n",
    "mean_weight = np.mean(weight)\n",
    "std_weight = np.std(weight)\n",
    "\n",
    "# Append to the data list\n",
    "data.append({\n",
    "    \"temperature\": temperature,\n",
    "    \"fO2\": fO2,\n",
    "    \"radius\": radius,\n",
    "        \"mean_radius\": mean_radius,\n",
    "        \"std_radius\": std_radius,\n",
    "    \"weight\": weight,\n",
    "        \"mean_weight\": mean_weight,\n",
    "        \"std_weight\": std_weight,\n",
    "    \"t\":t,\n",
    "    \"composition\": {\n",
    "        \"element\": element,\n",
    "        \"mean\": mean_value,\n",
    "        \"std_dev\": std_dev,\n",
    "        \"mean_ho\": mean_value_ho,\n",
    "        \"std_dev_ho\": std_dev_ho\n",
    "    }\n",
    "})\n",
    "\n",
    "\n",
    "# Repeat for more data points as needed\n",
    "# Example for another set of measurements\n",
    "temperature = 2185 + 273.15\n",
    "fO2 = 2.8982 * 10**-7\n",
    "element = \"Ce\"\n",
    "t = 22\n",
    "diameter = [0.00161, 0.00163, 0.00159, 0.00164, 0.00154]\n",
    "radius = np.array(diameter) / 2\n",
    "weight = (4 / 3) * np.pi * radius**3 * MeanDensityCMAST\n",
    "measurements = df.iloc[96:105, 66].values  # Accesses row 2, column 2 (Python is 0-indexed)\n",
    "measurements_ho = df.iloc[96:105, 90].values  # Accesses row i, column j (Python is 0-indexed) from sheet df Holium normalising\n",
    "\n",
    "# Calculate the mean and standard deviation\n",
    "mean_value = np.mean(measurements)\n",
    "std_dev = np.std(measurements)\n",
    "\n",
    "mean_value_ho = np.mean(measurements_ho)\n",
    "std_dev_ho = np.std(measurements_ho)\n",
    "\n",
    "mean_radius = np.mean(radius)\n",
    "std_radius = np.std(radius)\n",
    "\n",
    "mean_weight = np.mean(weight)\n",
    "std_weight = np.std(weight)\n",
    "\n",
    "# Append to the data list\n",
    "data.append({\n",
    "    \"temperature\": temperature,\n",
    "    \"fO2\": fO2,\n",
    "    \"radius\": radius,\n",
    "        \"mean_radius\": mean_radius,\n",
    "        \"std_radius\": std_radius,\n",
    "    \"weight\": weight,\n",
    "        \"mean_weight\": mean_weight,\n",
    "        \"std_weight\": std_weight,\n",
    "    \"t\":t,\n",
    "    \"composition\": {\n",
    "        \"element\": element,\n",
    "        \"mean\": mean_value,\n",
    "        \"std_dev\": std_dev,\n",
    "        \"mean_ho\": mean_value_ho,\n",
    "        \"std_dev_ho\": std_dev_ho\n",
    "    }\n",
    "})\n",
    "\n",
    "\n",
    "\n",
    "# Repeat for more data points as needed\n",
    "# Example for another set of measurements\n",
    "temperature = 2380 + 273.15\n",
    "fO2 = 5.4728 * 10**-8\n",
    "element = \"Ce\"\n",
    "t = 24\n",
    "diameter = [0.00147, 0.00145, 0.00142, 0.00149, 0.00143]\n",
    "radius = np.array(diameter) / 2\n",
    "weight = (4 / 3) * np.pi * radius**3 * MeanDensityCMAST\n",
    "measurements = df.iloc[108:117, 66].values  # Accesses row 2, column 2 (Python is 0-indexed)\n",
    "measurements_ho = df.iloc[108:117, 90].values  # Accesses row i, column j (Python is 0-indexed) from sheet df Holium normalising\n",
    "\n",
    "# Calculate the mean and standard deviation\n",
    "mean_value = np.mean(measurements)\n",
    "std_dev = np.std(measurements)\n",
    "\n",
    "mean_value_ho = np.mean(measurements_ho)\n",
    "std_dev_ho = np.std(measurements_ho)\n",
    "\n",
    "mean_radius = np.mean(radius)\n",
    "std_radius = np.std(radius)\n",
    "\n",
    "mean_weight = np.mean(weight)\n",
    "std_weight = np.std(weight)\n",
    "\n",
    "# Append to the data list\n",
    "data.append({\n",
    "    \"temperature\": temperature,\n",
    "    \"fO2\": fO2,\n",
    "    \"radius\": radius,\n",
    "        \"mean_radius\": mean_radius,\n",
    "        \"std_radius\": std_radius,\n",
    "    \"weight\": weight,\n",
    "        \"mean_weight\": mean_weight,\n",
    "        \"std_weight\": std_weight,\n",
    "    \"t\":t,\n",
    "    \"composition\": {\n",
    "        \"element\": element,\n",
    "        \"mean\": mean_value,\n",
    "        \"std_dev\": std_dev,\n",
    "        \"mean_ho\": mean_value_ho,\n",
    "        \"std_dev_ho\": std_dev_ho\n",
    "    }\n",
    "})\n",
    "\n",
    "\n",
    "# Repeat for more data points as needed\n",
    "\n",
    "temperature = 2560 + 273.15\n",
    "fO2 = 1.2893 * 10**-8\n",
    "element = \"Ce\"\n",
    "t = 21\n",
    "diameter = [0.00167, 0.00161, 0.00159, 0.00168, 0.00164]\n",
    "radius = np.array(diameter) / 2\n",
    "weight = (4 / 3) * np.pi * radius**3 * MeanDensityCMAST\n",
    "measurements = df.iloc[120:129, 66].values  # Accesses row 2, column 2 (Python is 0-indexed)\n",
    "measurements_ho = df.iloc[120:129, 90].values  # Accesses row i, column j (Python is 0-indexed) from sheet df Holium normalising\n",
    "\n",
    "# Calculate the mean and standard deviation\n",
    "mean_value = np.mean(measurements)\n",
    "std_dev = np.std(measurements)\n",
    "\n",
    "mean_value_ho = np.mean(measurements_ho)\n",
    "std_dev_ho = np.std(measurements_ho)\n",
    "\n",
    "mean_radius = np.mean(radius)\n",
    "std_radius = np.std(radius)\n",
    "\n",
    "mean_weight = np.mean(weight)\n",
    "std_weight = np.std(weight)\n",
    "\n",
    "# Append to the data list\n",
    "data.append({\n",
    "    \"temperature\": temperature,\n",
    "    \"fO2\": fO2,\n",
    "    \"radius\": radius,\n",
    "        \"mean_radius\": mean_radius,\n",
    "        \"std_radius\": std_radius,\n",
    "    \"weight\": weight,\n",
    "        \"mean_weight\": mean_weight,\n",
    "        \"std_weight\": std_weight,\n",
    "    \"t\":t,\n",
    "    \"composition\": {\n",
    "        \"element\": element,\n",
    "        \"mean\": mean_value,\n",
    "        \"std_dev\": std_dev,\n",
    "        \"mean_ho\": mean_value_ho,\n",
    "        \"std_dev_ho\": std_dev_ho\n",
    "    }\n",
    "})\n",
    "\n",
    "\n",
    "\n",
    "#Data CO2&O2#############################################################################################\n",
    "\n",
    "\n",
    "# Define the sheet name to load\n",
    "sheet_name = 'Data'  # Replace with the actual sheet name if different\n",
    "\n",
    "# Load the entire sheet into a DataFrame\n",
    "file_path_CO2_O2 = '/kaggle/input/calculatioan-co2-o2/241204_Paolo_Exp_TE_Calculations_CO2_O2.xlsx'\n",
    "df_CO2_O2 = pd.read_excel(file_path_CO2_O2, sheet_name=sheet_name)\n",
    "\n",
    "# Repeat for more data points as needed\n",
    "\n",
    "\n",
    "\n",
    "#Data CMAST CO2\n",
    "\n",
    "#CO2 2000\n",
    "\n",
    "temperature = 1990 + 273.15\n",
    "fO2 = 2.5543 * 10**-2\n",
    "element = \"Ce\"\n",
    "t = 90\n",
    "diameter = [0.00148, 0.00148, 0.00147, 0.00148, 0.00148]\n",
    "radius = np.array(diameter) / 2\n",
    "weight = [0.00000514,0.00000509,0.00000512]\n",
    "measurements = df_CO2_O2.iloc[136:145, 75].values  # Accesses row 2, column 2 (Python is 0-indexed)\n",
    "measurements_ho = df_CO2_O2.iloc[136:145, 99].values  # Accesses row i, column j (Python is 0-indexed) from sheet df Holium normalising\n",
    "\n",
    "# Calculate the mean and standard deviation\n",
    "mean_value = np.mean(measurements)\n",
    "std_dev = np.std(measurements)\n",
    "\n",
    "mean_value_ho = np.mean(measurements_ho)\n",
    "std_dev_ho = np.std(measurements_ho)\n",
    "\n",
    "mean_radius = np.mean(radius)\n",
    "std_radius = np.std(radius)\n",
    "\n",
    "mean_weight = np.mean(weight)\n",
    "std_weight = np.std(weight)\n",
    "\n",
    "# Append to the data list\n",
    "data.append({\n",
    "    \"temperature\": temperature,\n",
    "    \"fO2\": fO2,\n",
    "    \"radius\": radius,\n",
    "        \"mean_radius\": mean_radius,\n",
    "        \"std_radius\": std_radius,\n",
    "    \"weight\": weight,\n",
    "        \"mean_weight\": mean_weight,\n",
    "        \"std_weight\": std_weight,\n",
    "    \"t\":t,\n",
    "    \"composition\": {\n",
    "        \"element\": element,\n",
    "        \"mean\": mean_value,\n",
    "        \"std_dev\": std_dev,\n",
    "        \"mean_ho\": mean_value_ho,\n",
    "        \"std_dev_ho\": std_dev_ho\n",
    "    }\n",
    "})\n",
    "\n",
    "\n",
    "#CO2 2200\n",
    "\n",
    "temperature = 2210 + 273.15\n",
    "fO2 = 5.5873 * 10**-2\n",
    "element = \"Ce\"\n",
    "t = 97\n",
    "diameter = [0.00151, 0.00148, 0.00149, 0.00149, 0.00151]\n",
    "radius = np.array(diameter) / 2\n",
    "weight = [0.00000533,0.00000531,0.00000529]\n",
    "measurements = df_CO2_O2.iloc[148:157, 75].values  # Accesses row 2, column 2 (Python is 0-indexed)\n",
    "measurements_ho = df_CO2_O2.iloc[148:157, 99].values  # Accesses row i, column j (Python is 0-indexed) from sheet df Holium normalising\n",
    "\n",
    "# Calculate the mean and standard deviation\n",
    "mean_value = np.mean(measurements)\n",
    "std_dev = np.std(measurements)\n",
    "\n",
    "mean_value_ho = np.mean(measurements_ho)\n",
    "std_dev_ho = np.std(measurements_ho)\n",
    "\n",
    "mean_radius = np.mean(radius)\n",
    "std_radius = np.std(radius)\n",
    "\n",
    "mean_weight = np.mean(weight)\n",
    "std_weight = np.std(weight)\n",
    "\n",
    "# Append to the data list\n",
    "data.append({\n",
    "    \"temperature\": temperature,\n",
    "    \"fO2\": fO2,\n",
    "    \"radius\": radius,\n",
    "        \"mean_radius\": mean_radius,\n",
    "        \"std_radius\": std_radius,\n",
    "    \"weight\": weight,\n",
    "        \"mean_weight\": mean_weight,\n",
    "        \"std_weight\": std_weight,\n",
    "    \"t\":t,\n",
    "    \"composition\": {\n",
    "        \"element\": element,\n",
    "        \"mean\": mean_value,\n",
    "        \"std_dev\": std_dev,\n",
    "        \"mean_ho\": mean_value_ho,\n",
    "        \"std_dev_ho\": std_dev_ho\n",
    "    }\n",
    "})\n",
    "\n",
    "#CO2 2400\n",
    "\n",
    "temperature = 2400 + 273.15\n",
    "fO2 = 9.2754 * 10**-2\n",
    "element = \"Ce\"\n",
    "t = 61\n",
    "diameter = [0.00150, 0.00148, 0.00150, 0.00149, 0.00150]\n",
    "radius = np.array(diameter) / 2\n",
    "weight = [0.00000532,0.00000529,0.00000529]\n",
    "measurements = df_CO2_O2.iloc[160:169, 75].values  # Accesses row 2, column 2 (Python is 0-indexed)\n",
    "measurements_ho = df_CO2_O2.iloc[160:169, 99].values  # Accesses row i, column j (Python is 0-indexed) from sheet df Holium normalising\n",
    "\n",
    "# Calculate the mean and standard deviation\n",
    "mean_value = np.mean(measurements)\n",
    "std_dev = np.std(measurements)\n",
    "\n",
    "mean_value_ho = np.mean(measurements_ho)\n",
    "std_dev_ho = np.std(measurements_ho)\n",
    "\n",
    "mean_radius = np.mean(radius)\n",
    "std_radius = np.std(radius)\n",
    "\n",
    "mean_weight = np.mean(weight)\n",
    "std_weight = np.std(weight)\n",
    "\n",
    "# Append to the data list\n",
    "data.append({\n",
    "    \"temperature\": temperature,\n",
    "    \"fO2\": fO2,\n",
    "    \"radius\": radius,\n",
    "        \"mean_radius\": mean_radius,\n",
    "        \"std_radius\": std_radius,\n",
    "    \"weight\": weight,\n",
    "        \"mean_weight\": mean_weight,\n",
    "        \"std_weight\": std_weight,\n",
    "    \"t\":t,\n",
    "    \"composition\": {\n",
    "        \"element\": element,\n",
    "        \"mean\": mean_value,\n",
    "        \"std_dev\": std_dev,\n",
    "        \"mean_ho\": mean_value_ho,\n",
    "        \"std_dev_ho\": std_dev_ho\n",
    "    }\n",
    "})\n",
    "\n",
    "\n",
    "#Frage ist ob 2600 mit 2400 vertauscht wurde bei auswertung, wenn zeit bei 2400 nicht viel viel länger ist dann  measurements wechseln (ist viel längere dauer)\n",
    "\n",
    "\n",
    "#CO2 2600\n",
    "\n",
    "temperature = 2620 + 273.15\n",
    "fO2 = 0.13860\n",
    "element = \"Ce\"\n",
    "t = 31\n",
    "diameter = [0.00177, 0.00177, 0.00178, 0.00177, 0.00177]\n",
    "radius = np.array(diameter) / 2\n",
    "weight = [0.00000871,0.00000873,0.00000866]\n",
    "measurements = df_CO2_O2.iloc[172:181, 75].values  # Accesses row 2, column 2 (Python is 0-indexed)\n",
    "measurements_ho = df_CO2_O2.iloc[172:181, 99].values  # Accesses row i, column j (Python is 0-indexed) from sheet df Holium normalising\n",
    "\n",
    "# Calculate the mean and standard deviation\n",
    "mean_value = np.mean(measurements)\n",
    "std_dev = np.std(measurements)\n",
    "\n",
    "mean_value_ho = np.mean(measurements_ho)\n",
    "std_dev_ho = np.std(measurements_ho)\n",
    "\n",
    "mean_radius = np.mean(radius)\n",
    "std_radius = np.std(radius)\n",
    "\n",
    "mean_weight = np.mean(weight)\n",
    "std_weight = np.std(weight)\n",
    "\n",
    "# Append to the data list\n",
    "data.append({\n",
    "    \"temperature\": temperature,\n",
    "    \"fO2\": fO2,\n",
    "    \"radius\": radius,\n",
    "        \"mean_radius\": mean_radius,\n",
    "        \"std_radius\": std_radius,\n",
    "    \"weight\": weight,\n",
    "        \"mean_weight\": mean_weight,\n",
    "        \"std_weight\": std_weight,\n",
    "    \"t\":t,\n",
    "    \"composition\": {\n",
    "        \"element\": element,\n",
    "        \"mean\": mean_value,\n",
    "        \"std_dev\": std_dev,\n",
    "        \"mean_ho\": mean_value_ho,\n",
    "        \"std_dev_ho\": std_dev_ho\n",
    "    }\n",
    "})\n",
    "\n",
    "\n",
    "\n",
    "#O2 1800\n",
    "\n",
    "temperature = 1795 + 273.15\n",
    "fO2 = 0.99890\n",
    "element = \"Ce\"\n",
    "t = 83\n",
    "diameter = [0.00176, 0.00177, 0.00177, 0.00174, 0.00173]\n",
    "radius = np.array(diameter) / 2\n",
    "weight = [0.00000846,0.00000854,0.00000853]\n",
    "measurements = df_CO2_O2.iloc[184:193, 75].values  # Accesses row 2, column 2 (Python is 0-indexed)\n",
    "measurements_ho = df_CO2_O2.iloc[184:193, 99].values  # Accesses row i, column j (Python is 0-indexed) from sheet df Holium normalising\n",
    "\n",
    "# Calculate the mean and standard deviation\n",
    "mean_value = np.mean(measurements)\n",
    "std_dev = np.std(measurements)\n",
    "\n",
    "mean_value_ho = np.mean(measurements_ho)\n",
    "std_dev_ho = np.std(measurements_ho)\n",
    "\n",
    "mean_radius = np.mean(radius)\n",
    "std_radius = np.std(radius)\n",
    "\n",
    "mean_weight = np.mean(weight)\n",
    "std_weight = np.std(weight)\n",
    "\n",
    "# Append to the data list\n",
    "data.append({\n",
    "    \"temperature\": temperature,\n",
    "    \"fO2\": fO2,\n",
    "    \"radius\": radius,\n",
    "        \"mean_radius\": mean_radius,\n",
    "        \"std_radius\": std_radius,\n",
    "    \"weight\": weight,\n",
    "        \"mean_weight\": mean_weight,\n",
    "        \"std_weight\": std_weight,\n",
    "    \"t\":t,\n",
    "    \"composition\": {\n",
    "        \"element\": element,\n",
    "        \"mean\": mean_value,\n",
    "        \"std_dev\": std_dev,\n",
    "        \"mean_ho\": mean_value_ho,\n",
    "        \"std_dev_ho\": std_dev_ho\n",
    "    }\n",
    "})\n",
    "\n",
    "\n",
    "\n",
    "#O2 2000\n",
    "\n",
    "temperature = 2015 + 273.15\n",
    "fO2 = 0.99541\n",
    "element = \"Ce\"\n",
    "t = 69\n",
    "diameter = [0.00144, 0.00145, 0.00145, 0.00145, 0.00145]\n",
    "radius = np.array(diameter) / 2\n",
    "weight = [0.00000475,0.00000476,0.00000479]\n",
    "measurements = df_CO2_O2.iloc[196:205, 75].values  # Accesses row 2, column 2 (Python is 0-indexed)\n",
    "measurements_ho = df_CO2_O2.iloc[196:205, 99].values  # Accesses row i, column j (Python is 0-indexed) from sheet df Holium normalising\n",
    "\n",
    "# Calculate the mean and standard deviation\n",
    "mean_value = np.mean(measurements)\n",
    "std_dev = np.std(measurements)\n",
    "\n",
    "mean_value_ho = np.mean(measurements_ho)\n",
    "std_dev_ho = np.std(measurements_ho)\n",
    "\n",
    "mean_radius = np.mean(radius)\n",
    "std_radius = np.std(radius)\n",
    "\n",
    "mean_weight = np.mean(weight)\n",
    "std_weight = np.std(weight)\n",
    "\n",
    "# Append to the data list\n",
    "data.append({\n",
    "    \"temperature\": temperature,\n",
    "    \"fO2\": fO2,\n",
    "    \"radius\": radius,\n",
    "        \"mean_radius\": mean_radius,\n",
    "        \"std_radius\": std_radius,\n",
    "    \"weight\": weight,\n",
    "        \"mean_weight\": mean_weight,\n",
    "        \"std_weight\": std_weight,\n",
    "    \"t\":t,\n",
    "    \"composition\": {\n",
    "        \"element\": element,\n",
    "        \"mean\": mean_value,\n",
    "        \"std_dev\": std_dev,\n",
    "        \"mean_ho\": mean_value_ho,\n",
    "        \"std_dev_ho\": std_dev_ho\n",
    "    }\n",
    "})\n",
    "\n",
    "\n",
    "#O2 2200\n",
    "\n",
    "temperature = 2225 + 273.15\n",
    "fO2 = 0.98584\n",
    "element = \"Ce\"\n",
    "t = 55\n",
    "diameter = [0.00131, 0.00130, 0.00130, 0.00130, 0.00129]\n",
    "radius = np.array(diameter) / 2\n",
    "weight = [0.00000341,0.00000352,0.00000347]\n",
    "measurements = df_CO2_O2.iloc[208:217, 75].values  # Accesses row 2, column 2 (Python is 0-indexed)\n",
    "measurements_ho = df_CO2_O2.iloc[208:217, 99].values  # Accesses row i, column j (Python is 0-indexed) from sheet df Holium normalising\n",
    "\n",
    "# Calculate the mean and standard deviation\n",
    "mean_value = np.mean(measurements)\n",
    "std_dev = np.std(measurements)\n",
    "\n",
    "mean_value_ho = np.mean(measurements_ho)\n",
    "std_dev_ho = np.std(measurements_ho)\n",
    "\n",
    "mean_radius = np.mean(radius)\n",
    "std_radius = np.std(radius)\n",
    "\n",
    "mean_weight = np.mean(weight)\n",
    "std_weight = np.std(weight)\n",
    "\n",
    "# Append to the data list\n",
    "data.append({\n",
    "    \"temperature\": temperature,\n",
    "    \"fO2\": fO2,\n",
    "    \"radius\": radius,\n",
    "        \"mean_radius\": mean_radius,\n",
    "        \"std_radius\": std_radius,\n",
    "    \"weight\": weight,\n",
    "        \"mean_weight\": mean_weight,\n",
    "        \"std_weight\": std_weight,\n",
    "    \"t\":t,\n",
    "    \"composition\": {\n",
    "        \"element\": element,\n",
    "        \"mean\": mean_value,\n",
    "        \"std_dev\": std_dev,\n",
    "        \"mean_ho\": mean_value_ho,\n",
    "        \"std_dev_ho\": std_dev_ho\n",
    "    }\n",
    "})\n",
    "\n",
    "\n",
    "#O2 2400\n",
    "\n",
    "temperature = 2410 + 273.15\n",
    "fO2 = 0.96715\n",
    "element = \"Ce\"\n",
    "t = 51\n",
    "diameter = [0.00171, 0.00172, 0.00172, 0.00172, 0.00172]\n",
    "radius = np.array(diameter) / 2\n",
    "weight = [0.00000784,0.00000788,0.00000783]\n",
    "measurements = df_CO2_O2.iloc[220:229, 75].values  # Accesses row 2, column 2 (Python is 0-indexed)\n",
    "measurements_ho = df_CO2_O2.iloc[220:229, 99].values  # Accesses row i, column j (Python is 0-indexed) from sheet df Holium normalising\n",
    "\n",
    "# Calculate the mean and standard deviation\n",
    "mean_value = np.mean(measurements)\n",
    "std_dev = np.std(measurements)\n",
    "\n",
    "mean_value_ho = np.mean(measurements_ho)\n",
    "std_dev_ho = np.std(measurements_ho)\n",
    "\n",
    "mean_radius = np.mean(radius)\n",
    "std_radius = np.std(radius)\n",
    "\n",
    "mean_weight = np.mean(weight)\n",
    "std_weight = np.std(weight)\n",
    "\n",
    "# Append to the data list\n",
    "data.append({\n",
    "    \"temperature\": temperature,\n",
    "    \"fO2\": fO2,\n",
    "    \"radius\": radius,\n",
    "        \"mean_radius\": mean_radius,\n",
    "        \"std_radius\": std_radius,\n",
    "    \"weight\": weight,\n",
    "        \"mean_weight\": mean_weight,\n",
    "        \"std_weight\": std_weight,\n",
    "    \"t\":t,\n",
    "    \"composition\": {\n",
    "        \"element\": element,\n",
    "        \"mean\": mean_value,\n",
    "        \"std_dev\": std_dev,\n",
    "        \"mean_ho\": mean_value_ho,\n",
    "        \"std_dev_ho\": std_dev_ho\n",
    "    }\n",
    "})\n",
    "\n",
    "\n",
    "\n",
    "#O2 2600\n",
    "\n",
    "temperature = 2600 + 273.15\n",
    "fO2 = 0.93107\n",
    "element = \"Ce\"\n",
    "t = 33.5\n",
    "diameter = [0.00170, 0.00170, 0.00170, 0.00168, 0.00169]\n",
    "radius = np.array(diameter) / 2\n",
    "weight = [0.00000762,0.00000769,0.00000768]\n",
    "measurements = df_CO2_O2.iloc[232:241, 75].values  # Accesses row 2, column 2 (Python is 0-indexed)\n",
    "measurements_ho = df_CO2_O2.iloc[232:241, 99].values  # Accesses row i, column j (Python is 0-indexed) from sheet df Holium normalising\n",
    "\n",
    "# Calculate the mean and standard deviation\n",
    "mean_value = np.mean(measurements)\n",
    "std_dev = np.std(measurements)\n",
    "\n",
    "mean_value_ho = np.mean(measurements_ho)\n",
    "std_dev_ho = np.std(measurements_ho)\n",
    "\n",
    "mean_radius = np.mean(radius)\n",
    "std_radius = np.std(radius)\n",
    "\n",
    "mean_weight = np.mean(weight)\n",
    "std_weight = np.std(weight)\n",
    "\n",
    "# Append to the data list\n",
    "data.append({\n",
    "    \"temperature\": temperature,\n",
    "    \"fO2\": fO2,\n",
    "    \"radius\": radius,\n",
    "        \"mean_radius\": mean_radius,\n",
    "        \"std_radius\": std_radius,\n",
    "    \"weight\": weight,\n",
    "        \"mean_weight\": mean_weight,\n",
    "        \"std_weight\": std_weight,\n",
    "    \"t\":t,\n",
    "    \"composition\": {\n",
    "        \"element\": element,\n",
    "        \"mean\": mean_value,\n",
    "        \"std_dev\": std_dev,\n",
    "        \"mean_ho\": mean_value_ho,\n",
    "        \"std_dev_ho\": std_dev_ho\n",
    "    }\n",
    "})\n",
    "\n",
    "\n",
    "\n",
    "# Print the data to verify\n",
    "for entry in data:\n",
    "    print(entry)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "6484cfb4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-02T12:54:13.480566Z",
     "iopub.status.busy": "2025-04-02T12:54:13.479900Z",
     "iopub.status.idle": "2025-04-02T12:54:34.985742Z",
     "shell.execute_reply": "2025-04-02T12:54:34.984196Z"
    },
    "papermill": {
     "duration": 21.513174,
     "end_time": "2025-04-02T12:54:34.987881",
     "exception": false,
     "start_time": "2025-04-02T12:54:13.474707",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "differential_evolution step 1: f(x)= 0.18648120047292857\n",
      "differential_evolution step 2: f(x)= 0.18648120047292857\n",
      "differential_evolution step 3: f(x)= 0.12935823789224254\n",
      "differential_evolution step 4: f(x)= 0.12935823789224254\n",
      "differential_evolution step 5: f(x)= 0.12935823789224254\n",
      "differential_evolution step 6: f(x)= 0.12935823789224254\n",
      "differential_evolution step 7: f(x)= 0.12750944657155272\n",
      "differential_evolution step 8: f(x)= 0.12750944657155272\n",
      "differential_evolution step 9: f(x)= 0.12750944657155272\n",
      "differential_evolution step 10: f(x)= 0.12750944657155272\n",
      "differential_evolution step 11: f(x)= 0.12496944772672877\n",
      "differential_evolution step 12: f(x)= 0.1237901655653225\n",
      "differential_evolution step 13: f(x)= 0.1237901655653225\n",
      "differential_evolution step 14: f(x)= 0.1237901655653225\n",
      "differential_evolution step 15: f(x)= 0.1237901655653225\n",
      "differential_evolution step 16: f(x)= 0.12377295761016907\n",
      "differential_evolution step 17: f(x)= 0.12370708735855163\n",
      "differential_evolution step 18: f(x)= 0.11439154655620556\n",
      "differential_evolution step 19: f(x)= 0.04608820770293973\n",
      "differential_evolution step 20: f(x)= 0.04608820770293973\n",
      "differential_evolution step 21: f(x)= 0.04358698110384532\n",
      "differential_evolution step 22: f(x)= 0.03988226903349883\n",
      "differential_evolution step 23: f(x)= 0.03243200262857627\n",
      "differential_evolution step 24: f(x)= 0.03243200262857627\n",
      "differential_evolution step 25: f(x)= 0.03243200262857627\n",
      "differential_evolution step 26: f(x)= 0.03243200262857627\n",
      "differential_evolution step 27: f(x)= 0.03243200262857627\n",
      "differential_evolution step 28: f(x)= 0.03243200262857627\n",
      "differential_evolution step 29: f(x)= 0.03243200262857627\n",
      "differential_evolution step 30: f(x)= 0.03243200262857627\n",
      "differential_evolution step 31: f(x)= 0.03243200262857627\n",
      "differential_evolution step 32: f(x)= 0.03243200262857627\n",
      "differential_evolution step 33: f(x)= 0.03243200262857627\n",
      "differential_evolution step 34: f(x)= 0.031679398384068184\n",
      "differential_evolution step 35: f(x)= 0.031679398384068184\n",
      "differential_evolution step 36: f(x)= 0.031679398384068184\n",
      "differential_evolution step 37: f(x)= 0.031679398384068184\n",
      "differential_evolution step 38: f(x)= 0.031679398384068184\n",
      "differential_evolution step 39: f(x)= 0.031679398384068184\n",
      "differential_evolution step 40: f(x)= 0.031679398384068184\n",
      "differential_evolution step 41: f(x)= 0.031679398384068184\n",
      "differential_evolution step 42: f(x)= 0.031679398384068184\n",
      "differential_evolution step 43: f(x)= 0.031679398384068184\n",
      "differential_evolution step 44: f(x)= 0.031679398384068184\n",
      "differential_evolution step 45: f(x)= 0.031679398384068184\n",
      "differential_evolution step 46: f(x)= 0.031303452643307715\n",
      "differential_evolution step 47: f(x)= 0.03115165451195114\n",
      "differential_evolution step 48: f(x)= 0.030599000653679913\n",
      "differential_evolution step 49: f(x)= 0.030599000653679913\n",
      "differential_evolution step 50: f(x)= 0.03031716009330672\n",
      "differential_evolution step 51: f(x)= 0.030285241894998073\n",
      "differential_evolution step 52: f(x)= 0.030285241894998073\n",
      "differential_evolution step 53: f(x)= 0.030285241894998073\n",
      "differential_evolution step 54: f(x)= 0.030285241894998073\n",
      "differential_evolution step 55: f(x)= 0.030123228488162075\n",
      "differential_evolution step 56: f(x)= 0.030123228488162075\n",
      "differential_evolution step 57: f(x)= 0.030123228488162075\n",
      "differential_evolution step 58: f(x)= 0.030123228488162075\n",
      "differential_evolution step 59: f(x)= 0.030123228488162075\n",
      "differential_evolution step 60: f(x)= 0.030089494588793488\n",
      "differential_evolution step 61: f(x)= 0.030089494588793488\n",
      "differential_evolution step 62: f(x)= 0.030089494588793488\n",
      "differential_evolution step 63: f(x)= 0.030089494588793488\n",
      "differential_evolution step 64: f(x)= 0.030089494588793488\n",
      "differential_evolution step 65: f(x)= 0.030073774813029124\n",
      "differential_evolution step 66: f(x)= 0.030047274654729048\n",
      "differential_evolution step 67: f(x)= 0.030047274654729048\n",
      "differential_evolution step 68: f(x)= 0.030047274654729048\n",
      "differential_evolution step 69: f(x)= 0.030047274654729048\n",
      "differential_evolution step 70: f(x)= 0.030047274654729048\n",
      "differential_evolution step 71: f(x)= 0.030031343598331362\n",
      "differential_evolution step 72: f(x)= 0.030031343598331362\n",
      "differential_evolution step 73: f(x)= 0.030031343598331362\n",
      "differential_evolution step 74: f(x)= 0.030031343598331362\n",
      "differential_evolution step 75: f(x)= 0.030031343598331362\n",
      "differential_evolution step 76: f(x)= 0.030031343598331362\n",
      "differential_evolution step 77: f(x)= 0.030031343598331362\n",
      "differential_evolution step 78: f(x)= 0.030031343598331362\n",
      "differential_evolution step 79: f(x)= 0.030031343598331362\n",
      "differential_evolution step 80: f(x)= 0.030031343598331362\n",
      "differential_evolution step 81: f(x)= 0.030031343598331362\n",
      "Polishing solution with 'L-BFGS-B'\n",
      "Optimization terminated successfully.\n",
      "         Current function value: 0.030030\n",
      "         Iterations: 171\n",
      "         Function evaluations: 322\n",
      "Best-fit Sa: 103.69339497859895\n",
      "Best-fit Ha: 210542.40913086227\n",
      "Best-fit Sb: 114.3128581661812\n",
      "Best-fit Hb: 266447.0453659673\n",
      "Best loss: 0.030029838328673647\n"
     ]
    }
   ],
   "source": [
    "from mpl_toolkits.mplot3d import Axes3D\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "from scipy.optimize import minimize\n",
    "\n",
    "# Define the model function\n",
    "def model(X0, Sa, Ha, fO2, Sb, Hb, r, rho, M, R, T, t, t0):\n",
    "    Ka = np.exp((T * Sa - Ha) / (R * T))  # Updated Ka\n",
    "    Kb = np.exp((T * Sb - Hb) / (R * T))  # Updated Kb\n",
    "    #old#exponent = (- ((Ka / fO2 ** (-1 / 4)) + Kb) * 3 / (r * rho) * (M / (2 * np.pi * R * T)) ** (1 / 2) * (t - t0))\n",
    "    exponent = (- ((Ka / fO2 ** (-1 / 4)) + Kb) * 3 / (r * rho) * (M / (2 * np.pi * R * T)) ** (1 / 2) * (t - t0))\n",
    "    return X0 * np.exp(exponent)\n",
    "\n",
    "# Define the loss function\n",
    "def loss_function(params, ratio, fO2_values, r, rho, M, R, T, t, t0):\n",
    "    Sa, Ha, Sb, Hb = params  # Unpack parameters\n",
    "    # Predicted values using the model\n",
    "    X_predicted = model(1.0, Sa, Ha, fO2_values, Sb, Hb, r, rho, M, R, T, t, t0)\n",
    "    # Calculate quadratic loss\n",
    "    loss = np.sum((X_predicted - ratio) ** 2)\n",
    "    return loss\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "# Function to fit (Sa, Ha, Sb, Hb) to minimize loss\n",
    "def fit_ratio(ratio, fO2_values, r, rho, M, R, T, t, t0):\n",
    "    # Initial guesses for Sa, Ha, Sb, Hb\n",
    "    initial_guess = [120, 214233, 110, 230085]  # Example guesses, adjust as needed\n",
    "    \n",
    "    # Optimize parameters using scipy.optimize.minimize\n",
    "    result = minimize(\n",
    "    fun=loss_function,  # The loss function to minimize\n",
    "    x0=initial_guess,   # Initial guesses for the parameters\n",
    "    args=(ratio, fO2_values, r, rho, M, R, T, t, t0),  # Additional arguments passed to the loss function\n",
    "    method=\"Nelder-Mead\",      # Optimization method\n",
    "    options={\"disp\": True}  # Display convergence messages\n",
    "    )\n",
    "\n",
    "    \n",
    "    # Extract results and return them\n",
    "    Sa, Ha, Sb, Hb = result.x  # Optimized parameters\n",
    "    return Sa, Ha, Sb, Hb, result.fun  # Include loss for validation purposes\n",
    "\n",
    "\"\"\"\n",
    "\n",
    "#new try for function fitting hybrid fitting, desperation\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "import numpy as np\n",
    "from scipy.optimize import differential_evolution, minimize\n",
    "\n",
    "def hybrid_fit_ratio(ratio, fO2_values, r, rho, M, R, T, t, t0,\n",
    "                     bounds=[(-1000, 1000), (-800000, 800000), (-1000, 1000), (-800000, 800000)],\n",
    "                     global_options={'maxiter': 100000000, 'popsize': 500, 'disp': True},\n",
    "                     local_options={\"disp\": True, \"maxiter\": 100000}):\n",
    "    \"\"\"\n",
    "    Hybrid global-to-local optimization for parameters (Sa, Ha, Sb, Hb) minimizing loss_function.\n",
    "    \n",
    "    Parameters:\n",
    "      ratio, fO2_values, r, rho, M, R, T, t, t0:\n",
    "          Additional arguments to be passed to loss_function.\n",
    "      bounds:\n",
    "          A list of tuples defining the lower and upper bounds for each parameter.\n",
    "          Default: [(-1000, 1000), (-800000, 800000), (-1000, 1000), (-800000, 800000)]\n",
    "      global_options:\n",
    "          Options for the global optimizer (Differential Evolution).\n",
    "      local_options:\n",
    "          Options for the local optimizer (Nelder-Mead).\n",
    "    \n",
    "    Returns:\n",
    "      A tuple: (Sa, Ha, Sb, Hb, loss) where loss is the minimized loss value.\n",
    "    \"\"\"\n",
    "    \n",
    "    # Global optimization using Differential Evolution\n",
    "    global_result = differential_evolution(\n",
    "        loss_function,\n",
    "        bounds=bounds,\n",
    "        args=(ratio, fO2_values, r, rho, M, R, T, t, t0),\n",
    "        strategy='best1bin',\n",
    "        **global_options\n",
    "    )\n",
    "    \n",
    "    # Local refinement using the result of global optimization as the starting point\n",
    "    local_result = minimize(\n",
    "        loss_function,\n",
    "        x0=global_result.x,\n",
    "        args=(ratio, fO2_values, r, rho, M, R, T, t, t0),\n",
    "        method=\"Nelder-Mead\",\n",
    "        options=local_options\n",
    "    )\n",
    "    \n",
    "    # Extract and return optimized parameters and loss value\n",
    "    Sa, Ha, Sb, Hb = local_result.x\n",
    "    return Sa, Ha, Sb, Hb, local_result.fun\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# Constants and Values\n",
    "if __name__ == \"__main__\":\n",
    "    # Define constants\n",
    "    rho = 3023.05  # Density in kg/m^3\n",
    "    M = 0.140116  # Molar mass of evaporating species Cerium in kg/mol\n",
    "    R = 8.314  # Gas constant in J/(mol·K)\n",
    "    t0 = 0.0  # Initial time in seconds\n",
    "    \n",
    "    # Extract data (assumes `data` is predefined elsewhere)\n",
    "    fO2_values = np.array([entry[\"fO2\"] for entry in data])  # fO2 values\n",
    "    X_observed = np.array([entry[\"composition\"][\"mean\"] for entry in data])  # Observed Ce PPM values\n",
    "    X_observed_std_dev = np.array([entry[\"composition\"][\"std_dev\"] for entry in data])  # Observed Ce PPM standart deviation\n",
    "    X_holium = np.array([entry[\"composition\"][\"mean_ho\"] for entry in data])  # Observed ho PPM values\n",
    "    X_holium_std_dev = np.array([entry[\"composition\"][\"std_dev_ho\"] for entry in data])  # Observed Ho PPM standart deviation\n",
    "    T = np.array([entry[\"temperature\"] for entry in data])\n",
    "    r = np.array([entry[\"mean_radius\"] for entry in data])\n",
    "    t = np.array([entry[\"t\"] for entry in data])\n",
    "    \n",
    "    # Calculate normalized ratio\n",
    "    ratio = (X_observed / X_observed[0]) / (X_holium / X_holium[0])\n",
    "    \n",
    "    # Fit the data to find best-fit parameters\n",
    "    best_Sa, best_Ha, best_Sb, best_Hb, best_loss = hybrid_fit_ratio(ratio, fO2_values, r, rho, M, R, T, t, t0)\n",
    "\n",
    "    # Output results\n",
    "    print(f\"Best-fit Sa: {best_Sa}\")\n",
    "    print(f\"Best-fit Ha: {best_Ha}\")\n",
    "    print(f\"Best-fit Sb: {best_Sb}\")\n",
    "    print(f\"Best-fit Hb: {best_Hb}\")\n",
    "    print(f\"Best loss: {best_loss}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7fb52a4f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-02T12:54:35.006408Z",
     "iopub.status.busy": "2025-04-02T12:54:35.005880Z",
     "iopub.status.idle": "2025-04-02T12:54:36.375130Z",
     "shell.execute_reply": "2025-04-02T12:54:36.374024Z"
    },
    "jupyter": {
     "source_hidden": true
    },
    "papermill": {
     "duration": 1.38306,
     "end_time": "2025-04-02T12:54:36.379248",
     "exception": false,
     "start_time": "2025-04-02T12:54:34.996188",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean of t: 50.392857142857146\n"
     ]
    }
   ],
   "source": [
    "# 2D Plot: Ratio vs log(fO2)\n",
    "def plot_ratio_vs_logfO2_2d_with_errors(ratio, fO2_values, X_observed_std_dev, X_holium_std_dev, best_Sa, best_Ha, best_Sb, best_Hb, r, rho, M, R, t, t0):\n",
    "    # Compute log(fO2) values\n",
    "    log_fO2 = np.log10(fO2_values)\n",
    "\n",
    "\n",
    "    # Calculate ratio errors (propagation of uncertainty)\n",
    "    ratio_error = np.sqrt((X_observed_std_dev / X_observed)**2 + (X_holium_std_dev / X_holium)**2)\n",
    "\n",
    "\n",
    "    # Plot observed data points\n",
    "    plt.errorbar(log_fO2[0], ratio[0], yerr=ratio_error[0], fmt=\"o\", color=\"Blue\", label=\"2073K\", zorder=6,markersize=3,capsize=2, capthick=1, elinewidth=1, ecolor=\"blue\", alpha=0.9)\n",
    "    plt.errorbar(log_fO2[9], ratio[9], yerr=ratio_error[9], fmt=\"o\", color=\"Blue\", zorder=6,markersize=3,capsize=2, capthick=1, elinewidth=1, ecolor=\"blue\", alpha=0.9)\n",
    "    plt.errorbar(log_fO2[1], ratio[1], yerr=ratio_error[1], fmt=\"o\", color=\"Orange\", label=\"2273K\", zorder=6,markersize=3,capsize=2, capthick=1, elinewidth=1, ecolor=\"orange\", alpha=0.9)\n",
    "    plt.errorbar(log_fO2[5], ratio[5], yerr=ratio_error[5], fmt=\"o\", color=\"Orange\", zorder=6,markersize=3,capsize=2, capthick=1, elinewidth=1, ecolor=\"orange\", alpha=0.9)\n",
    "    plt.errorbar(log_fO2[10], ratio[10], yerr=ratio_error[10], fmt=\"o\", color=\"Orange\", zorder=6,markersize=3,capsize=2, capthick=1, elinewidth=1, ecolor=\"orange\", alpha=0.9)\n",
    "    plt.errorbar(log_fO2[2], ratio[2], yerr=ratio_error[2], fmt=\"o\", color=\"green\", label=\"2473K\", zorder=6,markersize=3,capsize=2, capthick=1, elinewidth=1, ecolor=\"green\", alpha=0.9)\n",
    "    plt.errorbar(log_fO2[6], ratio[6], yerr=ratio_error[6], fmt=\"o\", color=\"green\", zorder=6,markersize=3,capsize=2, capthick=1, elinewidth=1, ecolor=\"green\", alpha=0.9)\n",
    "    plt.errorbar(log_fO2[11], ratio[11], yerr=ratio_error[11], fmt=\"o\", color=\"green\", zorder=6,markersize=3,capsize=2, capthick=1, elinewidth=1, ecolor=\"green\", alpha=0.9)\n",
    "    plt.errorbar(log_fO2[3], ratio[3], yerr=ratio_error[3], fmt=\"o\", color=\"Red\", label=\"2673K\", zorder=6,markersize=3,capsize=2, capthick=1, elinewidth=1, ecolor=\"red\", alpha=0.9)\n",
    "    plt.errorbar(log_fO2[7], ratio[7], yerr=ratio_error[7], fmt=\"o\", color=\"Red\", zorder=6,markersize=3,capsize=2, capthick=1, elinewidth=1, ecolor=\"red\", alpha=0.9)\n",
    "    plt.errorbar(log_fO2[12], ratio[12], yerr=ratio_error[12], fmt=\"o\", color=\"Red\", zorder=6,markersize=3,capsize=2, capthick=1, elinewidth=1, ecolor=\"red\", alpha=0.9)\n",
    "    plt.errorbar(log_fO2[4], ratio[4], yerr=ratio_error[4], fmt=\"o\", color=\"Purple\",label=\"2873K\", zorder=6,markersize=3,capsize=2, capthick=1, elinewidth=1, ecolor=\"Purple\", alpha=0.9)\n",
    "    plt.errorbar(log_fO2[8], ratio[8], yerr=ratio_error[8], fmt=\"o\", color=\"Purple\", zorder=6,markersize=3,capsize=2, capthick=1, elinewidth=1, ecolor=\"Purple\", alpha=0.9)\n",
    "    plt.errorbar(log_fO2[13], ratio[13], yerr=ratio_error[13], fmt=\"o\", color=\"Purple\", zorder=6,markersize=3,capsize=2, capthick=1, elinewidth=1, ecolor=\"Purple\", alpha=0.9)\n",
    "\n",
    "\n",
    "\n",
    "    # Adding space to the x and y coordinates\n",
    "    x_offset = 0.05  # Adjust this value for horizontal spacing\n",
    "    y_offset = -0.015  # Adjust this value for vertical spacing\n",
    "\n",
    "\n",
    "   \n",
    "\n",
    "    # Add a number next to each point\n",
    "    for i in range(14):\n",
    "        plt.text(log_fO2[i], ratio[i] + y_offset, f\"{int(t[i])}\", color=\"black\", fontsize=8, ha='center', va='top')\n",
    "\n",
    "\n",
    "    # Define the temperature range and a grid of log(fO2) values for the model\n",
    "    temperature_range = np.arange(2073.15, 3073.15, 200)  # 2073.15 K to 2873.15 K\n",
    "    log_fO2_grid = np.linspace(np.log10(np.min(fO2_values)), np.log10(np.max(fO2_values)), 1000)  # 1000 log(fO2) points\n",
    "    fO2_grid = 10 ** log_fO2_grid  # Convert log(fO2) back to fO2 values for model calculations\n",
    "\n",
    "    # Compute the model ratio over the grid and plot for each temperature\n",
    "    for T in temperature_range:\n",
    "        Ka = np.exp((T * best_Sa - best_Ha) / (R * T))  # Compute Ka based on the new formula\n",
    "        Kb = np.exp((T * best_Sb - best_Hb) / (R * T))  # Compute Kb based on the new formula\n",
    "\n",
    "        exponent_plot = - ((Ka / fO2_grid ** (-1 / 4) + Kb) * 3 / (r.mean() * rho) * (M / (2 * np.pi * R * T))**(1/2) * (t.mean() - t0))\n",
    "        ratio_plot = np.exp(exponent_plot)  # Model ratio\n",
    "        plt.plot(log_fO2_grid, ratio_plot, label=f\"T = {T:.0f} K\", linestyle=\"--\",linewidth=1)\n",
    "\n",
    "    \n",
    "    # Configure the plot\n",
    "    plt.xlabel(\"log(fO2)\")\n",
    "    plt.ylabel(\"Ratio\")\n",
    "    plt.title(r\"Normalized Cerium ratio vs. log($fO_2$) with heating time t [s]\")\n",
    "    plt.legend(ncol=2,fontsize=\"small\",)\n",
    "    plt.grid(True)\n",
    "\n",
    "    plt.savefig(\"CMAST_ratio_vs_logfO2_timeinS_plot_Error.png\", dpi=300, bbox_inches=\"tight\")  # Save the plot\n",
    "    plt.show()\n",
    "\n",
    "\n",
    "# Call the function for the 2D plot with error bars\n",
    "plot_ratio_vs_logfO2_2d_with_errors(\n",
    "    ratio, fO2_values, X_observed_std_dev, X_holium_std_dev, \n",
    "    best_Sa, best_Ha, best_Sb, best_Hb, \n",
    "    r, rho, M, R, t, t0\n",
    ")\n",
    "\n",
    "\n",
    "print(\"Mean of t:\", t.mean())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "be4b8e63",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-02T12:54:36.406437Z",
     "iopub.status.busy": "2025-04-02T12:54:36.405978Z",
     "iopub.status.idle": "2025-04-02T12:54:38.012028Z",
     "shell.execute_reply": "2025-04-02T12:54:38.011036Z"
    },
    "papermill": {
     "duration": 1.620587,
     "end_time": "2025-04-02T12:54:38.015165",
     "exception": false,
     "start_time": "2025-04-02T12:54:36.394578",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Linear Fit for Reaction A:\n",
      "  Slope     = -68.64 J/(mol·K)\n",
      "  Intercept = 219911.84 J/mol\n",
      "\n",
      "Linear Fit for Reaction B:\n",
      "  Slope     = -137.98 J/(mol·K)\n",
      "  Intercept = 423740.02 J/mol\n"
     ]
    }
   ],
   "source": [
    "#For Paolo: In this block of code the Gibbs free energy of each reaction is calculated using the formula that uses the Heatcapaity Cp to determine H and S\n",
    "\n",
    "\n",
    "\n",
    "#Calculating the Gibbs free Energy of the 2 reactions\n",
    "\n",
    "\n",
    "\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.integrate import quad\n",
    "import scipy.integrate as spi\n",
    "\n",
    "# -------------------------------\n",
    "# Constants and Data (SI units)\n",
    "# -------------------------------\n",
    "T_ref = 298.15  # Reference temperature in K\n",
    "\n",
    "# Gas species (CeO₂(g), O₂(g), CeO(g) if needed)\n",
    "# Standard formation values at 298.15 K\n",
    "H0_CeO2_g = -538e3       # CeO2(g): Formation enthalpy [J/mol]\n",
    "S0_CeO2_g = 274.417      # CeO2(g): Formation entropy [J/(K·mol)]\n",
    "H0_O2_g   = 0        # O2(g): Formation enthalpy [J/mol]\n",
    "S0_O2_g   = 205.152         # O2(g): Formation entropy [J/(K·mol)]\n",
    "\n",
    "# Liquid (or solid extrapolated) species:\n",
    "# CeO2(sol)\n",
    "H0_CeO2_sol = -1086.596e3  # [J/mol]\n",
    "S0_CeO2_sol = 62.29      # [J/(K·mol)]\n",
    "# Ce2O3(sol) (used to approximate CeO1.5(l) as 1/2 * Ce2O3(sol))\n",
    "H0_Ce2O3_sol = -1788.745e3 # [J/mol]\n",
    "S0_Ce2O3_sol = 148.1    # [J/(K·mol)]\n",
    "\n",
    "# Fusion (latent heat) parameters\n",
    "# For Ce2O3(l)\n",
    "DeltaH_fus_Ce2O3 = 85e3   # J/mol\n",
    "T_m_Ce2O3 = 2450         # K\n",
    "# For CeO2(l)\n",
    "DeltaH_fus_CeO2 = 69e3    # J/mol\n",
    "T_m_CeO2 = 2670          # K\n",
    "\n",
    "# -------------------------------\n",
    "# Gas-phase Heat Capacity Functions\n",
    "# -------------------------------\n",
    "# CeO₂(g)\n",
    "def cp_low_CeO2_g(T):\n",
    "    return (37.7646 + 55.1209e-3 * T - 57.1816e-6 * T**2 \n",
    "            + 21.2692e-9 * T**3 - 2.6077e5 * T**-2)\n",
    "\n",
    "def cp_high_CeO2_g(T):\n",
    "    return (55.9864 + 2.90431e-3 * T - 1.4361e-6 * T**2 \n",
    "            + 0.25254e-9 * T**3 - 1.11908e6 * T**-2)\n",
    "\n",
    "def H_CeO2_g(T):\n",
    "    \"\"\"Temperature-dependent enthalpy for CeO₂(g) via integration.\"\"\"\n",
    "    H298 = H0_CeO2_g\n",
    "    bp = 900\n",
    "    if T <= bp:\n",
    "        integral, _ = spi.quad(cp_low_CeO2_g, T_ref, T)\n",
    "    else:\n",
    "        int_low, _ = spi.quad(cp_low_CeO2_g, T_ref, bp)\n",
    "        int_high, _ = spi.quad(cp_high_CeO2_g, bp, T)\n",
    "        integral = int_low + int_high\n",
    "    return H298 + integral\n",
    "\n",
    "def S_CeO2_g(T):\n",
    "    \"\"\"Temperature-dependent entropy for CeO₂(g) via integration.\"\"\"\n",
    "    S298 = S0_CeO2_g\n",
    "    bp = 900\n",
    "    if T <= bp:\n",
    "        integral, _ = spi.quad(lambda Tp: cp_low_CeO2_g(Tp)/Tp, T_ref, T)\n",
    "    else:\n",
    "        int_low, _ = spi.quad(lambda Tp: cp_low_CeO2_g(Tp)/Tp, T_ref, bp)\n",
    "        int_high, _ = spi.quad(lambda Tp: cp_high_CeO2_g(Tp)/Tp, bp, T)\n",
    "        integral = int_low + int_high\n",
    "    return S298 + integral\n",
    "\n",
    "def G_CeO2_g(T):\n",
    "    return H_CeO2_g(T) - T * S_CeO2_g(T)\n",
    "\n",
    "# O₂(g)\n",
    "def cp_low_O2(T):\n",
    "    return (31.32234 - 20.23531e-3 * T + 57.86644e-6 * T**2 \n",
    "            - 36.50624e-9 * T**3 - 0.007374e6 * T**-2)\n",
    "\n",
    "def cp_middle_O2(T):\n",
    "    return (30.03235 + 8.772972e-3 * T - 3.988133e-6 * T**2 \n",
    "            + 0.788313e-9 * T**3 - 0.741599e6 * T**-2)\n",
    "\n",
    "def cp_high_O2(T):\n",
    "    return (20.91111 + 10.72071e-3 * T - 2.020498e-6 * T**2 \n",
    "            + 0.146449e-9 * T**3 + 9.245722e6 * T**-2)\n",
    "\n",
    "def H_O2(T):\n",
    "    H298 = H0_O2_g\n",
    "    if T <= 700:\n",
    "        integral, _ = spi.quad(cp_low_O2, T_ref, T)\n",
    "        return H298 + integral\n",
    "    elif T <= 2000:\n",
    "        int_low, _ = spi.quad(cp_low_O2, T_ref, 700)\n",
    "        int_middle, _ = spi.quad(cp_middle_O2, 700, T)\n",
    "        return H298 + int_low + int_middle\n",
    "    else:\n",
    "        int_low, _ = spi.quad(cp_low_O2, T_ref, 700)\n",
    "        int_middle, _ = spi.quad(cp_middle_O2, 700, 2000)\n",
    "        int_high, _ = spi.quad(cp_high_O2, 2000, T)\n",
    "        return H298 + int_low + int_middle + int_high\n",
    "\n",
    "def S_O2(T):\n",
    "    S298 = S0_O2_g\n",
    "    if T <= 700:\n",
    "        integral, _ = spi.quad(lambda Tp: cp_low_O2(Tp)/Tp, T_ref, T)\n",
    "        return S298 + integral\n",
    "    elif T <= 2000:\n",
    "        int_low, _ = spi.quad(lambda Tp: cp_low_O2(Tp)/Tp, T_ref, 700)\n",
    "        int_middle, _ = spi.quad(lambda Tp: cp_middle_O2(Tp)/Tp, 700, T)\n",
    "        return S298 + int_low + int_middle\n",
    "    else:\n",
    "        int_low, _ = spi.quad(lambda Tp: cp_low_O2(Tp)/Tp, T_ref, 700)\n",
    "        int_middle, _ = spi.quad(lambda Tp: cp_middle_O2(Tp)/Tp, 700, 2000)\n",
    "        int_high, _ = spi.quad(lambda Tp: cp_high_O2(Tp)/Tp, 2000, T)\n",
    "        return S298 + int_low + int_middle + int_high\n",
    "\n",
    "def G_O2_g(T):\n",
    "    return H_O2(T) - T * S_O2(T)\n",
    "\n",
    "# -------------------------------\n",
    "# Liquid-phase Functions (using numerical integration)\n",
    "# -------------------------------\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "def cp_low_CeO2_sol(T):\n",
    "    return (74.4814 + 5.83682e-3 * T - 1.29710e6 / T**2)\n",
    "\n",
    "def cp_middle_CeO2_sol(T):\n",
    "    return (120.0)\n",
    "\n",
    "\n",
    "def H_CeO2_sol(T):\n",
    "    H298 = H0_CeO2_sol  # [J/mol]\n",
    "    if T <= T_m_CeO2:\n",
    "        integral, _ = spi.quad(cp_low_CeO2_sol, T_ref, T)\n",
    "        return H298 + integral\n",
    "    else:\n",
    "        int_low, _ = spi.quad(cp_low_CeO2_sol, T_ref, T_m_CeO2)\n",
    "        int_middle, _ = spi.quad(cp_middle_CeO2_sol, T_m_CeO2, T)\n",
    "        return H298 + int_low + int_middle\n",
    "\n",
    "def S_CeO2_sol(T):\n",
    "    S298 = S0_CeO2_sol      # [J/(K·mol)]\n",
    "    if T <= T_m_CeO2:\n",
    "        integral, _ = spi.quad(lambda Tp: cp_low_CeO2_sol(Tp)/Tp, T_ref, T)\n",
    "        return S298 + integral\n",
    "    else:\n",
    "        int_low, _ = spi.quad(lambda Tp: cp_low_CeO2_sol(Tp)/Tp, T_ref, T_m_CeO2)\n",
    "        int_middle, _ = spi.quad(lambda Tp: cp_middle_CeO2_sol(Tp)/Tp, T_m_CeO2, T)\n",
    "        return S298 + int_low + int_middle \n",
    "\n",
    "def G_CeO2_sol(T):\n",
    "    return H_CeO2_sol(T) - T * S_CeO2_sol(T)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "def cp_low_Ce2O3_sol(T):\n",
    "    return (113.736 + 28.4344e-3 * T - 0.641205e6 / T**2)\n",
    "\n",
    "def cp_middle_Ce2O3_sol(T):\n",
    "    return (145.0)\n",
    "\n",
    "def cp_high_Ce2O3_sol(T):\n",
    "    return (157.0)\n",
    "\n",
    "\n",
    "\n",
    "def H_Ce2O3_sol(T):\n",
    "    H298 = H0_Ce2O3_sol\n",
    "    if T <= 1200:\n",
    "        integral, _ = spi.quad(cp_low_Ce2O3_sol, T_ref, T)\n",
    "        return H298 + integral\n",
    "    elif T <= T_m_Ce2O3:\n",
    "        int_low, _ = spi.quad(cp_low_Ce2O3_sol, T_ref, 1200)\n",
    "        int_middle, _ = spi.quad(cp_middle_Ce2O3_sol, 1200, T)\n",
    "        return H298 + int_low + int_middle\n",
    "    else:\n",
    "        int_low, _ = spi.quad(cp_low_Ce2O3_sol, T_ref, 1200)\n",
    "        int_middle, _ = spi.quad(cp_middle_Ce2O3_sol, 1200, T_m_Ce2O3)\n",
    "        int_high, _ = spi.quad(cp_high_Ce2O3_sol, T_m_Ce2O3, T)\n",
    "        return H298 + int_low + int_middle + int_high\n",
    "\n",
    "def S_Ce2O3_sol(T):\n",
    "    S298 = S0_Ce2O3_sol     # [J/(K·mol)]\n",
    "    if T <= 1200:\n",
    "        integral, _ = spi.quad(lambda Tp: cp_low_Ce2O3_sol(Tp)/Tp, T_ref, T)\n",
    "        return S298 + integral\n",
    "    elif T <= T_m_Ce2O3:\n",
    "        int_low, _ = spi.quad(lambda Tp: cp_low_Ce2O3_sol(Tp)/Tp, T_ref, 1200)\n",
    "        int_middle, _ = spi.quad(lambda Tp: cp_middle_Ce2O3_sol(Tp)/Tp, 1200, T)\n",
    "        return S298 + int_low + int_middle\n",
    "    else:\n",
    "        int_low, _ = spi.quad(lambda Tp: cp_low_Ce2O3_sol(Tp)/Tp, T_ref, 1200)\n",
    "        int_middle, _ = spi.quad(lambda Tp: cp_middle_Ce2O3_sol(Tp)/Tp, 1200, T_m_Ce2O3)\n",
    "        int_high, _ = spi.quad(lambda Tp: cp_high_Ce2O3_sol(Tp)/Tp, T_m_Ce2O3, T)\n",
    "        return S298 + int_low + int_middle + int_high\n",
    "\n",
    "def G_Ce2O3_sol(T):\n",
    "    return H_Ce2O3_sol(T) - T * S_Ce2O3_sol(T)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "def DeltaG_fus(DeltaH_fus, T_m, T):\n",
    "    return DeltaH_fus * (1 - T/T_m)\n",
    "\n",
    "\n",
    "# -------------------------------\n",
    "# Reaction Functions\n",
    "# -------------------------------\n",
    "def G_CeO15_sol(T):\n",
    "    # Approximating CeO1.5(soll) as 1/2 Ce2O3(sol) \n",
    "    return 0.5 * (G_Ce2O3_sol(T))\n",
    "\n",
    "def G_rxn_A_func(T):\n",
    "    # Reaction A: CeO1.5(l) + 1/4 O2(g) -> CeO2(g)\n",
    "    # ΔG_rxn_A = + G_CeO2(g) - [G_CeO15_l + 0.25 * G_O2(g)]\n",
    "    return G_CeO2_g(T) - (G_CeO15_sol(T) + DeltaG_fus(DeltaH_fus_Ce2O3, T_m_Ce2O3, T) + 0.25 * G_O2_g(T))\n",
    "\n",
    "def G_rxn_B_func(T):\n",
    "    # Reaction B: CeO2(l) -> CeO2(g)\n",
    "    # ΔG_rxn_B = [G_CeO2(sol) - DeltaG_fus_CeO2] - G_CeO2(g)\n",
    "    return G_CeO2_g(T) - (G_CeO2_sol(T) + DeltaG_fus(DeltaH_fus_CeO2, T_m_CeO2, T)) \n",
    "\n",
    "# -------------------------------\n",
    "# Linear Fit over 2000K to 3000K\n",
    "# -------------------------------\n",
    "T_values = np.linspace(2200, 2900, 1000)\n",
    "G_A_values = np.array([G_rxn_A_func(T_val) for T_val in T_values])\n",
    "G_B_values = np.array([G_rxn_B_func(T_val) for T_val in T_values])\n",
    "\n",
    "# Linear fit (first-order polynomial)\n",
    "fit_A = np.polyfit(T_values, G_A_values, 1)\n",
    "fit_B = np.polyfit(T_values, G_B_values, 1)\n",
    "fit_A_func = np.poly1d(fit_A)\n",
    "fit_B_func = np.poly1d(fit_B)\n",
    "\n",
    "# -------------------------------\n",
    "# Plotting: Scatter dots and Linear Fit Lines\n",
    "# -------------------------------\n",
    "plt.figure(figsize=(10, 6))\n",
    "# Scatter plot data\n",
    "plt.scatter(T_values, G_A_values/1e3, s=5, color='red', alpha=0.5, label='Reaction A Data')\n",
    "plt.scatter(T_values, G_B_values/1e3, s=5, color='blue', alpha=0.5, label='Reaction B Data')\n",
    "# Linear fit lines\n",
    "plt.plot(T_values, fit_A_func(T_values)/1e3, color='darkred', linewidth=2,\n",
    "         label=f'Fit A: slope={fit_A[0]:.2f} J/(mol·K), intercept={fit_A[1]:.2f} J/mol')\n",
    "plt.plot(T_values, fit_B_func(T_values)/1e3, color='darkblue', linewidth=2,\n",
    "         label=f'Fit B: slope={fit_B[0]:.2f} J/(mol·K), intercept={fit_B[1]:.2f} J/mol')\n",
    "plt.xlabel('Temperature (K)')\n",
    "plt.ylabel('ΔG (kJ/mol)')\n",
    "plt.title('Linear Fit of Reaction Gibbs Free Energy vs Temperature')\n",
    "plt.legend()\n",
    "plt.grid(True, linestyle='--', alpha=0.6)\n",
    "plt.tight_layout()\n",
    "plt.savefig('Linear_Fit_Gibbs_Energy.png', dpi=300)\n",
    "plt.show()\n",
    "\n",
    "# -------------------------------\n",
    "# Print Linear Fit Results\n",
    "# -------------------------------\n",
    "print(\"Linear Fit for Reaction A:\")\n",
    "print(f\"  Slope     = {fit_A[0]:.2f} J/(mol·K)\")\n",
    "print(f\"  Intercept = {fit_A[1]:.2f} J/mol\")\n",
    "print(\"\\nLinear Fit for Reaction B:\")\n",
    "print(f\"  Slope     = {fit_B[0]:.2f} J/(mol·K)\")\n",
    "print(f\"  Intercept = {fit_B[1]:.2f} J/mol\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "977e02cf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-02T12:54:38.038304Z",
     "iopub.status.busy": "2025-04-02T12:54:38.037874Z",
     "iopub.status.idle": "2025-04-02T12:54:39.024002Z",
     "shell.execute_reply": "2025-04-02T12:54:39.022910Z"
    },
    "jupyter": {
     "source_hidden": true
    },
    "papermill": {
     "duration": 1.000711,
     "end_time": "2025-04-02T12:54:39.026762",
     "exception": false,
     "start_time": "2025-04-02T12:54:38.026051",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Visulizing the Reaction Gibbs free energy for experimentally measured values. \n",
    "\n",
    "\n",
    "def G_rxn_A_func(T):\n",
    "    return best_Ha - T * best_Sa\n",
    "\n",
    "def G_rxn_B_func(T):\n",
    "    return best_Hb - T * best_Sb\n",
    "\n",
    "# -------------------------------\n",
    "# Linear Fit over 2000K to 3000K\n",
    "# -------------------------------\n",
    "T_values = np.linspace(2200, 2900, 1000)\n",
    "G_A_values = np.array([G_rxn_A_func(T_val) for T_val in T_values])\n",
    "G_B_values = np.array([G_rxn_B_func(T_val) for T_val in T_values])\n",
    "\n",
    "\n",
    "# -------------------------------\n",
    "# Plotting: Scatter dots and Linear Fit Lines\n",
    "# -------------------------------\n",
    "plt.figure(figsize=(10, 6))\n",
    "# Scatter plot data\n",
    "plt.scatter(T_values, G_A_values/1e3, s=5, color='red', alpha=0.5, label='Reaction A Data')\n",
    "plt.scatter(T_values, G_B_values/1e3, s=5, color='blue', alpha=0.5, label='Reaction B Data')\n",
    "\n",
    "plt.xlabel('Temperature (K)')\n",
    "plt.ylabel('ΔG (kJ/mol)')\n",
    "plt.title('Experimentaly measured CMAST Reaction Gibbs Free Energy vs Temperature')\n",
    "plt.legend()\n",
    "plt.grid(True, linestyle='--', alpha=0.6)\n",
    "plt.tight_layout()\n",
    "plt.savefig('Experimentally_determined_Gibbs_Energy_CMAST.png', dpi=300)\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4bd752ff",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-02T12:54:39.052717Z",
     "iopub.status.busy": "2025-04-02T12:54:39.051757Z",
     "iopub.status.idle": "2025-04-02T12:54:40.528962Z",
     "shell.execute_reply": "2025-04-02T12:54:40.527925Z"
    },
    "papermill": {
     "duration": 1.492926,
     "end_time": "2025-04-02T12:54:40.531631",
     "exception": false,
     "start_time": "2025-04-02T12:54:39.038705",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x1000 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#For Paolo: This block of code uses the experimentally determined gibbs free energy values and the ones calculated from the Cp functions to determine the activity coeficients\n",
    "\n",
    "\n",
    "\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Universal gas constant\n",
    "R = 8.314  # J/(mol·K)\n",
    "\n",
    "# -------------------------------\n",
    "# Linear fit parameters (calculated) for each reaction:\n",
    "# Reaction A (CeO1.5(l) -> CeO2(g))\n",
    "dH_calc_A = fit_A[1]   # J/mol\n",
    "dS_calc_A = -fit_A[0]       # J/(mol·K)\n",
    "#print(dS_calc_A)\n",
    "\n",
    "# Reaction B (CeO2(l) -> CeO2(g))\n",
    "dH_calc_B = fit_B[1]  # J/mol\n",
    "dS_calc_B = -fit_B[0]       # J/(mol·K)\n",
    "\n",
    "# -------------------------------\n",
    "# Experimental (fitted) parameters for CMAST \n",
    "# -------------------------------\n",
    "# For Reaction A:\n",
    "dS_a_exp_CMAST = best_Sa      # J/(mol·K)\n",
    "dH_a_exp_CMAST = best_Ha       # J/mol\n",
    "# For Reaction B:\n",
    "dS_b_exp_CMAST = best_Sb      # J/(mol·K)\n",
    "dH_b_exp_CMAST = best_Hb       # J/mol\n",
    "\n",
    "\n",
    "# -------------------------------\n",
    "# Activity Coefficient Formulas \n",
    "# -------------------------------\n",
    "# The computed equilibrium constants from the methods described earlier can be compared\n",
    "# to the experimentally measured constants via their respective activity coefficients:\n",
    "#\n",
    "#   λ_CeO1.5(ℓ) = (K_a^*) / (K_a)  and  λ_CeO2(ℓ) = (K_b^*) / (K_b)\n",
    "#\n",
    "# where the equilibrium constant is computed as:\n",
    "#   K = (-H + T * S)/RT\n",
    "#\n",
    "# For Reaction A (CeO₁.₅(ℓ)):\n",
    "def lambda_A(T, dH_exp, dS_exp, dH_calc=dH_calc_A, dS_calc=dS_calc_A):\n",
    "    K_calc = np.exp((- dH_calc + T * dS_calc)/(R*T))  # computed equilibrium constant for Reaction A (K_a)\n",
    "    K_exp  = np.exp((- dH_exp + T * dS_exp)/(R*T))    # experimental equilibrium constant for Reaction A (K_a^*)\n",
    "    return K_exp / K_calc\n",
    "\n",
    "# For Reaction B (CeO₂(ℓ)):\n",
    "def lambda_B(T, dH_exp, dS_exp, dH_calc=dH_calc_B, dS_calc=dS_calc_B):\n",
    "    K_calc = np.exp((- dH_calc + T * dS_calc)/(R*T))  # computed equilibrium constant for Reaction B (K_b)\n",
    "    K_exp  = np.exp((- dH_exp + T * dS_exp)/(R*T))    # experimental equilibrium constant for Reaction B (K_b^*)\n",
    "    return (K_exp / K_calc)\n",
    "\n",
    "\n",
    "\n",
    "# -------------------------------\n",
    "# Generate T values and compute activity coefficients\n",
    "# -------------------------------\n",
    "T_vals = np.linspace(2200, 2900, 1000)  # Temperature range\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# CMAST activity coefficients:\n",
    "lambda_A_CMAST = lambda_A(T_vals, dH_a_exp_CMAST, dS_a_exp_CMAST)\n",
    "lambda_B_CMAST = lambda_B(T_vals, dH_b_exp_CMAST, dS_b_exp_CMAST)\n",
    "\n",
    "\n",
    "\n",
    "# -------------------------------\n",
    "# Plotting: 4 subplots (2 for CMAST and 2 for CAT)\n",
    "# -------------------------------\n",
    "fig, axs = plt.subplots(2, 1, figsize=(8, 10), sharex=True)\n",
    "fig.suptitle('Activity Coefficients vs Temperature (2200K - 2900K)')\n",
    "\n",
    "# CMAST Reaction A\n",
    "axs[0].scatter(T_vals, lambda_A_CMAST, s=5, color='red', alpha=0.5)\n",
    "axs[0].plot(T_vals, lambda_A_CMAST, color='darkred', linewidth=2)\n",
    "axs[0].set_title('CMAST Reaction A (CeO₁.₅(ℓ))')\n",
    "axs[0].set_ylabel('λ')\n",
    "\n",
    "# CMAST Reaction B\n",
    "axs[1].scatter(T_vals, lambda_B_CMAST, s=5, color='blue', alpha=0.5)\n",
    "axs[1].plot(T_vals, lambda_B_CMAST, color='darkblue', linewidth=2)\n",
    "axs[1].set_title('CMAST Reaction B (CeO₂(ℓ))')\n",
    "\n",
    "\n",
    "plt.tight_layout(rect=[0, 0.03, 1, 0.95])\n",
    "plt.savefig('Activity_Coefficients.png', dpi=300)\n",
    "plt.show()\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 6178213,
     "sourceId": 10031243,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 6422458,
     "sourceId": 10368943,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30786,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 32.649016,
   "end_time": "2025-04-02T12:54:41.065029",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-04-02T12:54:08.416013",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
